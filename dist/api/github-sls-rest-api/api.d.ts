/**
 * github-sls-rest-api
 * To generate a JWT token, go to the <a href=\"https://sso-nonlive.saml.to/auth/jwt.html\" target=\"_blank\">JWT Token Generator</a>
 *
 * The version of the OpenAPI document: 1.0.2-112
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 *
 * @export
 * @interface GithubSlsRestApiAuthSlsRestApiGithubLoginTokenEventV1
 */
export interface GithubSlsRestApiAuthSlsRestApiGithubLoginTokenEventV1 {
    /**
     *
     * @type {GithubSlsRestApiAuthSlsRestApiGithubLoginTokenEventV1VersionEnum}
     * @memberof GithubSlsRestApiAuthSlsRestApiGithubLoginTokenEventV1
     */
    'version': GithubSlsRestApiAuthSlsRestApiGithubLoginTokenEventV1VersionEnum;
    /**
     *
     * @type {GithubSlsRestApiAuthSlsRestApiGithubLoginTokenEventV1TypeEnum}
     * @memberof GithubSlsRestApiAuthSlsRestApiGithubLoginTokenEventV1
     */
    'type': GithubSlsRestApiAuthSlsRestApiGithubLoginTokenEventV1TypeEnum;
    /**
     *
     * @type {boolean}
     * @memberof GithubSlsRestApiAuthSlsRestApiGithubLoginTokenEventV1
     */
    'deleted'?: boolean;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiAuthSlsRestApiGithubLoginTokenEventV1
     */
    'token'?: string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiAuthSlsRestApiGithubLoginTokenEventV1
     */
    'email'?: string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiAuthSlsRestApiGithubLoginTokenEventV1
     */
    'login': string;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum GithubSlsRestApiAuthSlsRestApiGithubLoginTokenEventV1TypeEnum {
    GithubLoginTokenEvent = "GithubLoginTokenEvent"
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum GithubSlsRestApiAuthSlsRestApiGithubLoginTokenEventV1VersionEnum {
    NUMBER_1 = 1
}
/**
 *
 * @export
 * @interface GithubSlsRestApiAwsAssumeSdkOptions
 */
export interface GithubSlsRestApiAwsAssumeSdkOptions {
    /**
     *
     * @type {number}
     * @memberof GithubSlsRestApiAwsAssumeSdkOptions
     */
    'DurationSeconds': number;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiAwsAssumeSdkOptions
     */
    'RoleArn': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiAwsAssumeSdkOptions
     */
    'PrincipalArn': string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiConfigBase20220101
 */
export interface GithubSlsRestApiConfigBase20220101 {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiConfigBase20220101
     */
    'sha'?: string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiConfigBase20220101
     */
    'version': GithubSlsRestApiConfigBase20220101VersionEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GithubSlsRestApiConfigBase20220101VersionEnum {
    _20220101 = "20220101"
}
/**
 *
 * @export
 * @interface GithubSlsRestApiConfigV20220101
 */
export interface GithubSlsRestApiConfigV20220101 {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiConfigV20220101
     */
    'sha'?: string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiConfigV20220101
     */
    'version': GithubSlsRestApiConfigV20220101VersionEnum;
    /**
     *
     * @type {{ [key: string]: GithubSlsRestApiPermissionV1; }}
     * @memberof GithubSlsRestApiConfigV20220101
     */
    'permissions'?: {
        [key: string]: GithubSlsRestApiPermissionV1;
    };
    /**
     *
     * @type {{ [key: string]: GithubSlsRestApiProviderV1; }}
     * @memberof GithubSlsRestApiConfigV20220101
     */
    'providers'?: {
        [key: string]: GithubSlsRestApiProviderV1;
    };
    /**
     *
     * @type {GithubSlsRestApiVariableMapV1}
     * @memberof GithubSlsRestApiConfigV20220101
     */
    'variables'?: GithubSlsRestApiVariableMapV1;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GithubSlsRestApiConfigV20220101VersionEnum {
    _20220101 = "20220101"
}
/**
 *
 * @export
 * @interface GithubSlsRestApiConfigV20220101AllOf
 */
export interface GithubSlsRestApiConfigV20220101AllOf {
    /**
     *
     * @type {{ [key: string]: GithubSlsRestApiPermissionV1; }}
     * @memberof GithubSlsRestApiConfigV20220101AllOf
     */
    'permissions'?: {
        [key: string]: GithubSlsRestApiPermissionV1;
    };
    /**
     *
     * @type {{ [key: string]: GithubSlsRestApiProviderV1; }}
     * @memberof GithubSlsRestApiConfigV20220101AllOf
     */
    'providers'?: {
        [key: string]: GithubSlsRestApiProviderV1;
    };
    /**
     *
     * @type {GithubSlsRestApiVariableMapV1}
     * @memberof GithubSlsRestApiConfigV20220101AllOf
     */
    'variables'?: GithubSlsRestApiVariableMapV1;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiEncryptRequest
 */
export interface GithubSlsRestApiEncryptRequest {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiEncryptRequest
     */
    'value': string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiEncryptResponse
 */
export interface GithubSlsRestApiEncryptResponse {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiEncryptResponse
     */
    'encryptedValue': string;
}
/**
 * This file was automatically generated by joi-to-typescript Do not modify this file manually
 * @export
 * @interface GithubSlsRestApiEncryptedField
 */
export interface GithubSlsRestApiEncryptedField {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiEncryptedField
     */
    'encryptedValue': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiEncryptedField
     */
    'keyId': string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiErrorResponse
 */
export interface GithubSlsRestApiErrorResponse {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiErrorResponse
     */
    'message': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiErrorResponse
     */
    'traceId': string;
    /**
     *
     * @type {GithubSlsRestApiErrorResponseTracking}
     * @memberof GithubSlsRestApiErrorResponse
     */
    'tracking': GithubSlsRestApiErrorResponseTracking;
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof GithubSlsRestApiErrorResponse
     */
    'context'?: {
        [key: string]: any;
    };
}
/**
 *
 * @export
 * @interface GithubSlsRestApiErrorResponseTracking
 */
export interface GithubSlsRestApiErrorResponseTracking {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiErrorResponseTracking
     */
    'method': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiErrorResponseTracking
     */
    'path': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiErrorResponseTracking
     */
    'version': string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiHealthResponse
 */
export interface GithubSlsRestApiHealthResponse {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiHealthResponse
     */
    'version': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiHealthResponse
     */
    'now': string;
    /**
     *
     * @type {boolean}
     * @memberof GithubSlsRestApiHealthResponse
     */
    'healty': boolean;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiHealthResponse
     */
    'name': string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiListResponseLoginResponse
 */
export interface GithubSlsRestApiListResponseLoginResponse {
    /**
     *
     * @type {GithubSlsRestApiListResponseOrgRepoResponseNext}
     * @memberof GithubSlsRestApiListResponseLoginResponse
     */
    'next'?: GithubSlsRestApiListResponseOrgRepoResponseNext;
    /**
     *
     * @type {number}
     * @memberof GithubSlsRestApiListResponseLoginResponse
     */
    'total': number;
    /**
     *
     * @type {number}
     * @memberof GithubSlsRestApiListResponseLoginResponse
     */
    'count': number;
    /**
     *
     * @type {Array<GithubSlsRestApiLoginResponse>}
     * @memberof GithubSlsRestApiListResponseLoginResponse
     */
    'results': Array<GithubSlsRestApiLoginResponse>;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiListResponseOrgRepoResponse
 */
export interface GithubSlsRestApiListResponseOrgRepoResponse {
    /**
     *
     * @type {GithubSlsRestApiListResponseOrgRepoResponseNext}
     * @memberof GithubSlsRestApiListResponseOrgRepoResponse
     */
    'next'?: GithubSlsRestApiListResponseOrgRepoResponseNext;
    /**
     *
     * @type {number}
     * @memberof GithubSlsRestApiListResponseOrgRepoResponse
     */
    'total': number;
    /**
     *
     * @type {number}
     * @memberof GithubSlsRestApiListResponseOrgRepoResponse
     */
    'count': number;
    /**
     *
     * @type {Array<GithubSlsRestApiOrgRepoResponse>}
     * @memberof GithubSlsRestApiListResponseOrgRepoResponse
     */
    'results': Array<GithubSlsRestApiOrgRepoResponse>;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiListResponseOrgRepoResponseNext
 */
export interface GithubSlsRestApiListResponseOrgRepoResponseNext {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiListResponseOrgRepoResponseNext
     */
    'sk': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiListResponseOrgRepoResponseNext
     */
    'pk': string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiListResponseRoleResponse
 */
export interface GithubSlsRestApiListResponseRoleResponse {
    /**
     *
     * @type {GithubSlsRestApiListResponseOrgRepoResponseNext}
     * @memberof GithubSlsRestApiListResponseRoleResponse
     */
    'next'?: GithubSlsRestApiListResponseOrgRepoResponseNext;
    /**
     *
     * @type {number}
     * @memberof GithubSlsRestApiListResponseRoleResponse
     */
    'total': number;
    /**
     *
     * @type {number}
     * @memberof GithubSlsRestApiListResponseRoleResponse
     */
    'count': number;
    /**
     *
     * @type {Array<GithubSlsRestApiRoleResponse>}
     * @memberof GithubSlsRestApiListResponseRoleResponse
     */
    'results': Array<GithubSlsRestApiRoleResponse>;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiLoginResponse
 */
export interface GithubSlsRestApiLoginResponse {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiLoginResponse
     */
    'provider': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiLoginResponse
     */
    'repo': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiLoginResponse
     */
    'org': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiLoginResponse
     */
    'login': string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiLoginResponseContainer
 */
export interface GithubSlsRestApiLoginResponseContainer {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiLoginResponseContainer
     */
    'browserUri': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiLoginResponseContainer
     */
    'provider': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiLoginResponseContainer
     */
    'repo': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiLoginResponseContainer
     */
    'org': string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiLoginToken
 */
export interface GithubSlsRestApiLoginToken {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiLoginToken
     */
    'email'?: string;
    /**
     *
     * @type {GithubSlsRestApiEncryptedField}
     * @memberof GithubSlsRestApiLoginToken
     */
    'encryptedToken': GithubSlsRestApiEncryptedField;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiLoginToken
     */
    'login': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiLoginToken
     */
    'namespace': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiLoginToken
     */
    'pk': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiLoginToken
     */
    'scopes'?: string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiLoginToken
     */
    'sk': string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiMetadataResponse
 */
export interface GithubSlsRestApiMetadataResponse {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiMetadataResponse
     */
    'certificate': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiMetadataResponse
     */
    'logoutUrl': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiMetadataResponse
     */
    'loginUrl': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiMetadataResponse
     */
    'entityId': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiMetadataResponse
     */
    'metadataXml': string;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum GithubSlsRestApiNameIdFormatV1 {
    Id = "id",
    Login = "login",
    Email = "email",
    EmailV2 = "emailV2"
}
/**
 * This file was automatically generated by joi-to-typescript Do not modify this file manually
 * @export
 * @interface GithubSlsRestApiOrgRepo
 */
export interface GithubSlsRestApiOrgRepo {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiOrgRepo
     */
    'baseUrl': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiOrgRepo
     */
    'configSha'?: string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiOrgRepo
     */
    'org': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiOrgRepo
     */
    'pk': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiOrgRepo
     */
    'repo': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiOrgRepo
     */
    'sk': string;
}
/**
 * This file was automatically generated by joi-to-typescript Do not modify this file manually
 * @export
 * @interface GithubSlsRestApiOrgRepoLogin
 */
export interface GithubSlsRestApiOrgRepoLogin {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiOrgRepoLogin
     */
    'login': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiOrgRepoLogin
     */
    'org': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiOrgRepoLogin
     */
    'pk': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiOrgRepoLogin
     */
    'repo': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiOrgRepoLogin
     */
    'sk': string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiOrgRepoResponse
 */
export interface GithubSlsRestApiOrgRepoResponse {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiOrgRepoResponse
     */
    'repo': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiOrgRepoResponse
     */
    'org': string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiPermissionV1
 */
export interface GithubSlsRestApiPermissionV1 {
    /**
     *
     * @type {Array<GithubSlsRestApiRolesV1>}
     * @memberof GithubSlsRestApiPermissionV1
     */
    'roles'?: Array<GithubSlsRestApiRolesV1>;
    /**
     *
     * @type {GithubSlsRestApiUsersV1}
     * @memberof GithubSlsRestApiPermissionV1
     */
    'users'?: GithubSlsRestApiUsersV1;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiProviderV1
 */
export interface GithubSlsRestApiProviderV1 {
    /**
     *
     * @type {GithubSlsRestApiProvisioningV1}
     * @memberof GithubSlsRestApiProviderV1
     */
    'provisioning'?: GithubSlsRestApiProvisioningV1;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof GithubSlsRestApiProviderV1
     */
    'attributes'?: {
        [key: string]: string;
    };
    /**
     *
     * @type {GithubSlsRestApiNameIdFormatV1}
     * @memberof GithubSlsRestApiProviderV1
     */
    'nameIdFormat'?: GithubSlsRestApiNameIdFormatV1;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiProviderV1
     */
    'nameId'?: string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiProviderV1
     */
    'loginUrl'?: string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiProviderV1
     */
    'acsUrl'?: string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiProviderV1
     */
    'entityId'?: string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiProvisioningV1
 */
export interface GithubSlsRestApiProvisioningV1 {
    /**
     *
     * @type {GithubSlsRestApiScimV1}
     * @memberof GithubSlsRestApiProvisioningV1
     */
    'scim'?: GithubSlsRestApiScimV1;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiRoleResponse
 */
export interface GithubSlsRestApiRoleResponse {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiRoleResponse
     */
    'role': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiRoleResponse
     */
    'provider': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiRoleResponse
     */
    'repo': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiRoleResponse
     */
    'org': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiRoleResponse
     */
    'login': string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiRolesV1
 */
export interface GithubSlsRestApiRolesV1 {
    /**
     *
     * @type {GithubSlsRestApiUsersV1}
     * @memberof GithubSlsRestApiRolesV1
     */
    'users'?: GithubSlsRestApiUsersV1;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiRolesV1
     */
    'name'?: string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiSamlResponseContainer
 */
export interface GithubSlsRestApiSamlResponseContainer {
    /**
     *
     * @type {GithubSlsRestApiAwsAssumeSdkOptions}
     * @memberof GithubSlsRestApiSamlResponseContainer
     */
    'sdkOptions'?: GithubSlsRestApiAwsAssumeSdkOptions;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiSamlResponseContainer
     */
    'browserUri'?: string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiSamlResponseContainer
     */
    'role'?: string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiSamlResponseContainer
     */
    'provider': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiSamlResponseContainer
     */
    'repo': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiSamlResponseContainer
     */
    'org': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiSamlResponseContainer
     */
    'samlResponse': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiSamlResponseContainer
     */
    'relayState': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiSamlResponseContainer
     */
    'recipient': string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiScimV1
 */
export interface GithubSlsRestApiScimV1 {
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiScimV1
     */
    'encryptedToken'?: string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiScimV1
     */
    'endpoint'?: string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiUsersV1
 */
export interface GithubSlsRestApiUsersV1 {
    /**
     *
     * @type {Array<string>}
     * @memberof GithubSlsRestApiUsersV1
     */
    'github'?: Array<string>;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiVariableMapV1
 */
export interface GithubSlsRestApiVariableMapV1 {
    [key: string]: GithubSlsRestApiVariableV1 | any;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiVariableMapV1
     */
    'logoutUrl': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiVariableMapV1
     */
    'loginUrl': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiVariableMapV1
     */
    'entityIdUriEncoded': string;
    /**
     *
     * @type {string}
     * @memberof GithubSlsRestApiVariableMapV1
     */
    'entityId': string;
}
/**
 *
 * @export
 * @interface GithubSlsRestApiVariableV1
 */
export interface GithubSlsRestApiVariableV1 {
}
/**
 * HealthApi - axios parameter creator
 * @export
 */
export declare const HealthApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    get: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * HealthApi - functional programming interface
 * @export
 */
export declare const HealthApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    get(options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GithubSlsRestApiHealthResponse>>;
};
/**
 * HealthApi - factory interface
 * @export
 */
export declare const HealthApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    get(options?: any): AxiosPromise<GithubSlsRestApiHealthResponse>;
};
/**
 * HealthApi - object-oriented interface
 * @export
 * @class HealthApi
 * @extends {BaseAPI}
 */
export declare class HealthApi extends BaseAPI {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HealthApi
     */
    get(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GithubSlsRestApiHealthResponse, any>>;
}
/**
 * IDPApi - axios parameter creator
 * @export
 */
export declare const IDPApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {string} role
     * @param {string} [org]
     * @param {string} [provider]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assumeRole: (role: string, org?: string | undefined, provider?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} org
     * @param {GithubSlsRestApiEncryptRequest} githubSlsRestApiEncryptRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    encrypt: (org: string, githubSlsRestApiEncryptRequest: GithubSlsRestApiEncryptRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} org
     * @param {boolean} [raw]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrgConfig: (org: string, raw?: boolean | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} org
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrgMetadata: (org: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [org]
     * @param {boolean} [refresh]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLogins: (org?: string | undefined, refresh?: boolean | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listOrgRepos: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} [org]
     * @param {boolean} [refresh]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listRoles: (org?: string | undefined, refresh?: boolean | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} provider
     * @param {string} [org]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    providerLogin: (provider: string, org?: string | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} org
     * @param {string} repo
     * @param {boolean} [force]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setOrgAndRepo: (org: string, repo: string, force?: boolean | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * IDPApi - functional programming interface
 * @export
 */
export declare const IDPApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {string} role
     * @param {string} [org]
     * @param {string} [provider]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assumeRole(role: string, org?: string | undefined, provider?: string | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GithubSlsRestApiSamlResponseContainer>>;
    /**
     *
     * @param {string} org
     * @param {GithubSlsRestApiEncryptRequest} githubSlsRestApiEncryptRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    encrypt(org: string, githubSlsRestApiEncryptRequest: GithubSlsRestApiEncryptRequest, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GithubSlsRestApiEncryptResponse>>;
    /**
     *
     * @param {string} org
     * @param {boolean} [raw]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrgConfig(org: string, raw?: boolean | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GithubSlsRestApiConfigV20220101>>;
    /**
     *
     * @param {string} org
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrgMetadata(org: string, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GithubSlsRestApiMetadataResponse>>;
    /**
     *
     * @param {string} [org]
     * @param {boolean} [refresh]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLogins(org?: string | undefined, refresh?: boolean | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GithubSlsRestApiListResponseLoginResponse>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listOrgRepos(options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GithubSlsRestApiListResponseOrgRepoResponse>>;
    /**
     *
     * @param {string} [org]
     * @param {boolean} [refresh]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listRoles(org?: string | undefined, refresh?: boolean | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GithubSlsRestApiListResponseRoleResponse>>;
    /**
     *
     * @param {string} provider
     * @param {string} [org]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    providerLogin(provider: string, org?: string | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GithubSlsRestApiLoginResponseContainer>>;
    /**
     *
     * @param {string} org
     * @param {string} repo
     * @param {boolean} [force]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setOrgAndRepo(org: string, repo: string, force?: boolean | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<GithubSlsRestApiOrgRepoLogin>>;
};
/**
 * IDPApi - factory interface
 * @export
 */
export declare const IDPApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @param {string} role
     * @param {string} [org]
     * @param {string} [provider]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    assumeRole(role: string, org?: string | undefined, provider?: string | undefined, options?: any): AxiosPromise<GithubSlsRestApiSamlResponseContainer>;
    /**
     *
     * @param {string} org
     * @param {GithubSlsRestApiEncryptRequest} githubSlsRestApiEncryptRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    encrypt(org: string, githubSlsRestApiEncryptRequest: GithubSlsRestApiEncryptRequest, options?: any): AxiosPromise<GithubSlsRestApiEncryptResponse>;
    /**
     *
     * @param {string} org
     * @param {boolean} [raw]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrgConfig(org: string, raw?: boolean | undefined, options?: any): AxiosPromise<GithubSlsRestApiConfigV20220101>;
    /**
     *
     * @param {string} org
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrgMetadata(org: string, options?: any): AxiosPromise<GithubSlsRestApiMetadataResponse>;
    /**
     *
     * @param {string} [org]
     * @param {boolean} [refresh]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLogins(org?: string | undefined, refresh?: boolean | undefined, options?: any): AxiosPromise<GithubSlsRestApiListResponseLoginResponse>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listOrgRepos(options?: any): AxiosPromise<GithubSlsRestApiListResponseOrgRepoResponse>;
    /**
     *
     * @param {string} [org]
     * @param {boolean} [refresh]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listRoles(org?: string | undefined, refresh?: boolean | undefined, options?: any): AxiosPromise<GithubSlsRestApiListResponseRoleResponse>;
    /**
     *
     * @param {string} provider
     * @param {string} [org]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    providerLogin(provider: string, org?: string | undefined, options?: any): AxiosPromise<GithubSlsRestApiLoginResponseContainer>;
    /**
     *
     * @param {string} org
     * @param {string} repo
     * @param {boolean} [force]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    setOrgAndRepo(org: string, repo: string, force?: boolean | undefined, options?: any): AxiosPromise<GithubSlsRestApiOrgRepoLogin>;
};
/**
 * IDPApi - object-oriented interface
 * @export
 * @class IDPApi
 * @extends {BaseAPI}
 */
export declare class IDPApi extends BaseAPI {
    /**
     *
     * @param {string} role
     * @param {string} [org]
     * @param {string} [provider]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IDPApi
     */
    assumeRole(role: string, org?: string, provider?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GithubSlsRestApiSamlResponseContainer, any>>;
    /**
     *
     * @param {string} org
     * @param {GithubSlsRestApiEncryptRequest} githubSlsRestApiEncryptRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IDPApi
     */
    encrypt(org: string, githubSlsRestApiEncryptRequest: GithubSlsRestApiEncryptRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GithubSlsRestApiEncryptResponse, any>>;
    /**
     *
     * @param {string} org
     * @param {boolean} [raw]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IDPApi
     */
    getOrgConfig(org: string, raw?: boolean, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GithubSlsRestApiConfigV20220101, any>>;
    /**
     *
     * @param {string} org
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IDPApi
     */
    getOrgMetadata(org: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GithubSlsRestApiMetadataResponse, any>>;
    /**
     *
     * @param {string} [org]
     * @param {boolean} [refresh]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IDPApi
     */
    listLogins(org?: string, refresh?: boolean, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GithubSlsRestApiListResponseLoginResponse, any>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IDPApi
     */
    listOrgRepos(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GithubSlsRestApiListResponseOrgRepoResponse, any>>;
    /**
     *
     * @param {string} [org]
     * @param {boolean} [refresh]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IDPApi
     */
    listRoles(org?: string, refresh?: boolean, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GithubSlsRestApiListResponseRoleResponse, any>>;
    /**
     *
     * @param {string} provider
     * @param {string} [org]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IDPApi
     */
    providerLogin(provider: string, org?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GithubSlsRestApiLoginResponseContainer, any>>;
    /**
     *
     * @param {string} org
     * @param {string} repo
     * @param {boolean} [force]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IDPApi
     */
    setOrgAndRepo(org: string, repo: string, force?: boolean, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GithubSlsRestApiOrgRepoLogin, any>>;
}
//# sourceMappingURL=api.d.ts.map